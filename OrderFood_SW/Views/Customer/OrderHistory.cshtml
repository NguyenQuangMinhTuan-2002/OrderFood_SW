@model List<OrderFood_SW.ViewModels.OrderHistoryViewModel>
@{
    Layout = "_CustomerLayout";
    var tableId = Context.Session.GetString("TableId");
}

<link rel="stylesheet" href="~/css/customer-style/customer-history.css" asp-append-version="true">

<div class="main-content" style="padding-top:5px">
    <!-- Filter Section -->
    @* <div class="filter-section">
        <div class="filter-row">
            <div class="filter-group">
                <label for="status-filter">Trạng thái</label>
                <select id="status-filter" class="filter-select">
                    <option value="">Tất cả trạng thái</option>
                    <option value="completed">Hoàn thành</option>
                    <option value="processing">Đang xử lý</option>
                    <option value="delivered">Đã giao</option>
                    <option value="cancelled">Đã hủy</option>
                </select>
            </div>

            <div class="filter-group">
                <label for="date-from">Từ ngày</label>
                <input type="date" id="date-from" class="filter-input">
            </div>

            <div class="filter-group">
                <label for="date-to">Đến ngày</label>
                <input type="date" id="date-to" class="filter-input">
            </div>

            <div class="filter-group">
                <label for="search-order">Tìm kiếm đơn hàng</label>
                <input type="text" id="search-order" class="filter-input" placeholder="Nhập mã đơn hàng...">
            </div>
        </div>
        <button class="filter-btn">Lọc kết quả</button>
    </div> *@

    <!-- Orders Container -->
    <div class="orders-container">
        @foreach (var item in Model)
        {
            <div class="order-card">
                <div class="order-header">
                    <div class="order-info">
                        <div class="order-id">#@item.OrderId</div>
                        <div class="order-date">@item.OrderTime</div>
                    </div>
                    <div class="order-status">
                        @if (item.OrderStatus.Equals("1"))
                        {
                            <span class="status-badge status-processing">Pending...</span>
                        }
                        else if (item.OrderStatus.Equals("2"))
                        {
                            <span class="status-badge status-delivered">Approved</span>
                        }
                        else if (item.OrderStatus.Equals("-1"))
                        {
                            <span class="status-badge status-cancelled">Cancelled</span>
                        }
                        <div class="order-total">@item.TotalAmount</div>
                    </div>
                </div>
                <div class="order-body">
                    <div class="order-items">
                        @foreach (var detail in item.OrderDetails)
                        {
                            <div class="order-item">
                                <img src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='60' height='60' viewBox='0 0 60 60'%3E%3Crect width='60' height='60' fill='%23FF9800'/%3E%3Ctext x='30' y='32' text-anchor='middle' fill='white' font-family='Arial' font-size='10'%3EPizza%3C/text%3E%3Ctext x='30' y='44' text-anchor='middle' fill='white' font-family='Arial' font-size='10'%3EHải sản%3C/text%3E%3C/svg%3E" alt="Pizza hải sản" class="item-image">
                                <div class="item-details">
                                    <div class="item-name">@detail.DishName</div>
                                    @* <div class="item-description">@detail.</div> *@
                                </div>
                                <div class="item-price-qty">
                                    <span class="item-quantity">@detail.Quantity</span>
                                    <span class="item-price">@detail.UnitPrice</span>
                                </div>
                            </div>
                        }
                    </div>
                    @if (item.OrderStatus.Equals("2"))
                    {
                        <div class="order-actions">
                            <a asp-action="OrderDetails" asp-controller="Customer" asp-route-orderId="@item.OrderId" class="action-btn btn-secondary">
                                See more details
                            </a>
                            <form method="post" asp-action="ReOrder" asp-controller="CustomerOrder">
                                <input type="hidden" name="orderId" value="@item.OrderId" />
                                <input type="hidden" name="tableId" value="@tableId" />
                                <button class="action-btn btn-primary">Re-Order</button>
                            </form>
                        </div>
                    }
                    else if (item.OrderStatus.Equals("1"))
                    {
                        <div class="order-actions">
                            <a asp-action="OrderDetails" asp-controller="Customer" asp-route-orderId="@item.OrderId" class="action-btn btn-secondary">
                                See more details
                            </a>
                            <form method="post" asp-action="CancelOrder" asp-controller="Customer">
                                <input type="hidden" name="orderId" value="@item.OrderId" />
                                <button type="submit" class="action-btn btn-secondary">Cancel</button>
                            </form>
                        </div>
                    }
                    else if (item.OrderStatus.Equals("-1"))
                    {
                        <div class="order-actions">
                            <a asp-action="OrderDetails" asp-controller="Customer" asp-route-orderId="@item.OrderId" class="action-btn btn-secondary">
                                See more details
                            </a>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>

<div class="pagination-container">
    @{
        var currentPage = (int)ViewBag.CurrentPage;
        var totalOrders = (int)ViewBag.TotalOrders;
        var totalPages = (int)ViewBag.TotalPages;
        var hasPrevious = (bool)ViewBag.HasPreviousPage;
        var hasNext = (bool)ViewBag.HasNextPage;

        var startItem = (currentPage - 1) * 10 + 1;
        var endItem = Math.Min(currentPage * 10, totalOrders);
    }

    <div class="pagination-info">
        Showing @startItem to @endItem of @totalOrders orders
    </div>

    <ul class="pagination">
        <li>
            @if (hasPrevious)
            {
                <a href="@Url.Action("OrderHistory", new { page = currentPage - 1 })" class="prev">Previous</a>
            }
            @* else
            {
                <span class="prev disabled">Previous</span>
            } *@
        </li>

        @{
            // Smart pagination logic - shows max 7 page numbers + ellipsis
            var maxVisiblePages = 5;
            var halfVisible = maxVisiblePages / 2;

            int start, end;
            bool showStartEllipsis = false;
            bool showEndEllipsis = false;

            if (totalPages <= maxVisiblePages + 2)
            {
                // Show all pages if total is small
                start = 1;
                end = totalPages;
            }
            else if (currentPage <= halfVisible + 1)
            {
                // Near the beginning
                start = 1;
                end = maxVisiblePages;
                showEndEllipsis = true;
            }
            else if (currentPage >= totalPages - halfVisible)
            {
                // Near the end
                start = totalPages - maxVisiblePages + 1;
                end = totalPages;
                showStartEllipsis = true;
            }
            else
            {
                // In the middle
                start = currentPage - halfVisible;
                end = currentPage + halfVisible;
                showStartEllipsis = true;
                showEndEllipsis = true;
            }
        }

        @* Always show first page if not in range *@
        @if (showStartEllipsis && start > 1)
        {
            <li><a href="@Url.Action("OrderHistory", new { page = 1 })">1</a></li>
            @if (start > 2)
            {
                <li><span class="disabled">...</span></li>
            }
        }

        @* Show page numbers *@
        @for (int i = start; i <= end; i++)
        {
            <li>
                @if (i == currentPage)
                {
                    <span class="current">@i</span>
                }
                else
                {
                    <a href="@Url.Action("OrderHistory", new { page = i })">@i</a>
                }
            </li>
        }

        @* Always show last page if not in range *@
        @if (showEndEllipsis && end < totalPages)
        {
            @if (end < totalPages - 1)
            {
                <li><span class="disabled">...</span></li>
            }
            <li><a href="@Url.Action("OrderHistory", new { page = totalPages })">@totalPages</a></li>
        }

        <li>
            @if (hasNext)
            {
                <a href="@Url.Action("OrderHistory", new { page = currentPage + 1 })" class="next">Next</a>
            }
            @* else
            {
                <span class="next disabled">Next</span>
            } *@
        </li>
    </ul>
</div>